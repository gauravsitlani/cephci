# Test suite to Depoy a ceph cluster and perform Various day1 adn day2 operations on the cluster.
# Actions covered :
# 1. Set-up cluster wih all the daemons & 1 admin client mode deployed
# 2. Enable email alerts module
# 3. Create, Test & delete replicated and EC pools for sanity.
# 4. Deploy stretch cluster with all available disks into two sites
# 5. Create and test Various compression algorithms on Replicated pools
# 6. Enable and test Balancer module on cluster with various options
# 7. Verify mute health alerts functionality
# 8. Enable and test PG Autoscaler module on cluster with various options

tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true

  - test:
      name: cluster deployment
      desc: Execute the cluster deployment workflow.
      module: test_cephadm.py
      polarion-id:
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              base_cmd_args:
                verbose: true
              args:
                registry-url: registry.redhat.io
                mon-ip: node1
                orphan-initial-daemons: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: shell
              args:          # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              command: apply
              service: mds
              base_cmd_args:          # arguments to ceph orch
                verbose: true
              pos_args:
                - cephfs              # name of the filesystem
              args:
                placement:
                  nodes:
                    - node2
                    - node6
                  limit: 2            # no of daemons
                  sep: " "            # separator to be used for placements
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Configure client admin
      desc: Configures client admin node on cluster
      module: test_client.py
      polarion-id:
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node8                       # client node
        install_packages:
          - ceph-common
          - ceph-base
        copy_admin_keyring: true          # Copy admin keyring to node
        caps:                             # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"

  - test:
      name: Configure email alerts
      module: rados_prep.py
      polarion-id: CEPH-83574472
      config:
        email_alerts:
          smtp_host: smtp.corp.redhat.com
          smtp_sender: ceph-iad2-c01-lab.mgr@redhat.com
          smtp_port: 25
          interval: 10
          smtp_destination:
            - pdhiran@redhat.com
          smtp_from_name: Rados Sanity Cluster Alerts
      desc: Configure email alerts on ceph cluster

  - test:
      name: EC and Replicated pool LC
      module: rados_prep.py
      polarion-id: CEPH-83571632
      config:
        ec_pool:
          create: true
          pool_name: test_ec_pool
          pg_num: 64
          min_size: 3
          k: 3
          m: 2
          plugin: jerasure
          disable_pg_autoscale: true
          rados_write_duration: 10
          rados_read_duration: 10
        replicated_pool:
          create: true
          pool_name: test_re_pool
          pg_num: 64
          size: 2
          disable_pg_autoscale: true
          rados_write_duration: 10
          rados_read_duration: 10
        set_pool_configs:
          pool_name: test_ec_pool
          configurations:
            pg_num: 32
            pgp_num: 32
            pg_autoscale_mode: 'on'
            compression_mode: force
            compression_algorithm: snappy
        delete_pools:
          - test_ec_pool
          - test_re_pool
      desc: Create pools with different size, both replicated and erasure coded

  - test:
      name: Deploy stretch Cluster
      module: stretch_cluster.py
      polarion-id: CEPH-83573621
      config:
        site1: site-blr
        site2: site-pune
      desc: Enables connectivity mode and deploys cluster with Stretch rule with arbiter node

  - test:
      name: Compression algorithms
      module: rados_prep.py
      polarion-id: CEPH-83571669
      config:
        replicated_pool:
          create: true
          pool_name: re_pool_compress
          rados_write_duration: 10
          rados_read_duration: 10
        enable_compression:
          pool_name: re_pool_compress
          configurations:
            - config-1:
                compression_mode: force
                compression_algorithm: snappy
                compression_required_ratio: 0.3
                compression_min_blob_size: 1B
                byte_size: 10KB
                rados_write_duration: 50
                rados_read_duration: 50
            - config-2:
                compression_mode: passive
                compression_algorithm: zlib
                compression_required_ratio: 0.7
                compression_min_blob_size: 10B
                byte_size: 100KB
                rados_write_duration: 50
                rados_read_duration: 50
            - config-3:
                compression_mode: aggressive
                compression_algorithm: zstd
                compression_required_ratio: 0.5
                compression_min_blob_size: 1KB
                byte_size: 100KB
                rados_write_duration: 50
                rados_read_duration: 50
      desc: Enable/disable different compression algorithms.

  - test:
      name: Ceph balancer test
      module: rados_prep.py
      polarion-id: CEPH-83573251, CEPH-83573247
      config:
        configure_balancer:
          configure: true
          balancer_mode: upmap
          target_max_misplaced_ratio: 0.4
          sleep_interval: 60
      desc: Ceph balancer plugins CLI validation

  - test:
      name: Mute ceph health alerts
      polarion-id: CEPH-83573854
      module: mute_alerts.py
      desc: Mute health alerts

  - test:
      name: Ceph PG Autoscaler
      module: rados_prep.py
      polarion-id: CEPH-83573412
      config:
        replicated_pool:
          create: true
          pool_name: rep_test_pool
          rados_write_duration: 10
          rados_read_duration: 10
        configure_pg_autoscaler:
          default_mode: warn
          mon_target_pg_per_osd: 128
          pool_config:
            pool_name: rep_test_pool
            pg_autoscale_mode: "on"
            pg_num_min: 16
            target_size_ratio: 0.4
      desc: Ceph PG autoscaler CLI validation
